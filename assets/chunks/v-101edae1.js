"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[2937],{4254:(e,o,t)=>{t.r(o),t.d(o,{data:()=>r});const r=JSON.parse('{"key":"v-101edae1","path":"/services/Docker.html","title":"Docker","lang":"zh-CN","frontmatter":{"article":false,"title":"Docker","icon":"any","order":4,"summary":"Docker 是一个开源的应用容器引擎，可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。简单点说，用 Docker 你不懂太多代码知识，直接用其他人的打包容器，小白也可以部署复杂的服务应用。 Compose 是用于定","head":[["meta",{"property":"og:url","content":"https://newzone.top/services/Docker.html"}],["meta",{"property":"og:site_name","content":"LearnData-开源学习笔记"}],["meta",{"property":"og:title","content":"Docker"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-08-12T15:59:11.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-08-12T15:59:11.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"Docker 命令","slug":"docker-命令","children":[]}],"git":{"createdTime":1658511538000,"updatedTime":1660319951000,"contributors":[{"name":"rockbenben","email":"qingwhat@gmail.com","commits":4}]},"readingTime":{"minutes":1.26,"words":379},"filePathRelative":"services/Docker.md","localizedDate":"2022年7月22日"}')},6613:(e,o,t)=>{t.r(o),t.d(o,{default:()=>_});var r=t(8e3);const c=(0,r._)("p",null,"Docker 是一个开源的应用容器引擎，可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。简单点说，用 Docker 你不懂太多代码知识，直接用其他人的打包容器，小白也可以部署复杂的服务应用。",-1),n=(0,r.Uk)("Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来管理多个 Docker 容器，并配置应用程序需要的所有服务。在配置文件中，所有的容器通过 services 来定义，然后使用 docker-compose 脚本来启动，停止和重启应用，和应用中的服务以及所有依赖服务的容器，非常适合组合使用多个容器进行开发的场景。强烈推荐使用 Compose 搭建所有 Docker，流程参考 "),l=(0,r.Uk)("群晖 NAS 上搭建 Docker"),a=(0,r.Uk)("。"),i=(0,r._)("h2",{id:"docker-命令",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#docker-命令","aria-hidden":"true"},"#"),(0,r.Uk)(" Docker 命令")],-1),k=(0,r.Uk)("Docker 使用查看 "),s={href:"https://yeasy.gitbook.io/docker_practice/introduction/what",target:"_blank",rel:"noopener noreferrer"},p=(0,r.Uk)("Docker — 从入门到实践"),d=(0,r.Uk)("。"),u=(0,r._)("ul",null,[(0,r._)("li",null,[(0,r._)("p",null,[(0,r.Uk)("列出所有容器："),(0,r._)("code",null,"sudo docker ps -a"),(0,r.Uk)("。")])]),(0,r._)("li",null,[(0,r._)("p",null,[(0,r.Uk)("停止容器运行："),(0,r._)("code",null,"sudo docker stop <CONTAINER ID/NAME>"),(0,r.Uk)("。部分容器名有可能无法识别，最好在容器名称中添加数字。")])]),(0,r._)("li",null,[(0,r._)("p",null,[(0,r.Uk)("删除指定容器："),(0,r._)("code",null,"sudo docker rm <CONTAINER ID/NAME>"),(0,r.Uk)("，删除前需先停止容器。")])])],-1),m={},_=(0,t(1935).Z)(m,[["render",function(e,o){const t=(0,r.up)("RouterLink"),m=(0,r.up)("ExternalLinkIcon");return(0,r.wg)(),(0,r.iD)("div",null,[c,(0,r._)("p",null,[n,(0,r.Wm)(t,{to:"/services/NAS.html#nas-docker"},{default:(0,r.w5)((()=>[l])),_:1}),a]),i,(0,r._)("p",null,[k,(0,r._)("a",s,[p,(0,r.Wm)(m)]),d]),u])}]])},1935:(e,o)=>{o.Z=(e,o)=>{const t=e.__vccOpts||e;for(const[e,r]of o)t[e]=r;return t}}}]);