"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4896],{709:(n,a,e)=>{e.r(a),e.d(a,{data:()=>s});const s=JSON.parse('{"key":"v-4466c163","path":"/apps/Apps.html","title":"应用笔记","lang":"zh-CN","frontmatter":{"article":false,"title":"应用笔记","order":3,"summary":"小工具 \\" 收集稀奇古怪的小工具\\" Animated Drawings – 自动将绘画转换为动画; Logseq 比起 Obsidian，Logseq 罗列内容更方便，而且也可以制作模板。Logseq 将所有行都视为节点，因此非常轻松可以把所需的子节点整合在一个页面，实现关键信息聚合。 Logseq 是最强的日记功能，日记可以自动套用指定模板。^[How t","head":[["meta",{"property":"og:url","content":"https://newzone.top/apps/Apps.html"}],["meta",{"property":"og:site_name","content":"LearnData-开源学习笔记"}],["meta",{"property":"og:title","content":"应用笔记"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-07-26T23:30:07.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:modified_time","content":"2022-07-26T23:30:07.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"小工具","slug":"小工具","children":[]},{"level":2,"title":"Logseq","slug":"logseq","children":[{"level":3,"title":"快速使用","slug":"快速使用","children":[]},{"level":3,"title":"query","slug":"query","children":[]}]},{"level":2,"title":"Obisidian","slug":"obisidian","children":[{"level":3,"title":"Dataview","slug":"dataview","children":[]},{"level":3,"title":"Obsidian Query Language","slug":"obsidian-query-language","children":[]},{"level":3,"title":"Easy Typing","slug":"easy-typing","children":[]}]},{"level":2,"title":"flomo","slug":"flomo","children":[]},{"level":2,"title":"TheBrain","slug":"thebrain","children":[]},{"level":2,"title":"Visual Studio Code","slug":"visual-studio-code","children":[{"level":3,"title":"修改快捷键","slug":"修改快捷键","children":[]},{"level":3,"title":"排除文件夹","slug":"排除文件夹","children":[]},{"level":3,"title":"picgo 图床","slug":"picgo-图床","children":[]}]},{"level":2,"title":"Eagle 素材管理","slug":"eagle-素材管理","children":[]},{"level":2,"title":"Zinc","slug":"zinc","children":[{"level":3,"title":"Zinc 初次启动","slug":"zinc-初次启动","children":[]},{"level":3,"title":"全文索引-Bluge","slug":"全文索引-bluge","children":[]}]}],"git":{"createdTime":1658878207000,"updatedTime":1658878207000,"contributors":[{"name":"rockbenben","email":"qingwhat@gmail.com","commits":1}]},"readingTime":{"minutes":7.06,"words":2118},"filePathRelative":"apps/Apps.md","localizedDate":"2022年7月26日"}')},9540:(n,a,e)=>{e.r(a),e.d(a,{default:()=>cn});var s=e(8e3);const t=(0,s._)("h2",{id:"小工具",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#小工具","aria-hidden":"true"},"#"),(0,s.Uk)(" 小工具")],-1),o=(0,s._)("blockquote",null,[(0,s._)("p",null,"收集稀奇古怪的小工具")],-1),l={href:"https://www.appinn.com/animated-drawings/",target:"_blank",rel:"noopener noreferrer"},i=(0,s.Uk)("Animated Drawings – 自动将绘画转换为动画"),p=(0,s.uE)('<h2 id="logseq" tabindex="-1"><a class="header-anchor" href="#logseq" aria-hidden="true">#</a> Logseq</h2><p>比起 Obsidian，Logseq 罗列内容更方便，而且也可以制作模板。Logseq 将所有行都视为节点，因此非常轻松可以把所需的子节点整合在一个页面，实现关键信息聚合。</p><p>Logseq 是最强的日记功能，日记可以自动套用指定模板。<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup></p><p>但其他笔记需要手动启用模板，修改 .env 的设置 <code>{:week &quot;journals&quot;}</code> 被报错。继续尝试设计周记、月报的模板。</p><p>logaeq 劣势，所有页面建立在 pages 下，但可以手动修改位置。</p><p>logseq 和 obasidian 双内笔记软件有个特点，就是说是嗯，重点是。笔记文件的名称和废太位置，只要文文就是名称一致，你问位置转移到其他地方也是不会影响引用和使用的。</p><p>主题：Dracula</p><h3 id="快速使用" tabindex="-1"><a class="header-anchor" href="#快速使用" aria-hidden="true">#</a> 快速使用</h3><ul><li><code>[[]]</code> 可快速新建页面，<code>All pages</code>中可删除空页面</li><li>打开右上角的「侧边栏」，使用目录管理主页面</li><li>将页面中内容汇总起来，比如「心理学」标签页面显示所有心理学</li><li>任务时，使用 later 或 now，切换后改变状态，会记录任务持续时间。 <ul><li>如果使用 <code>doing</code> 或者 <code>now</code> 命令，它会更显眼地出现在每天日志的下方（如红框所示），以防当天记录的东西过多，或者到了第二天生成了新的日志后被忽略。<strong>直到你将它完成为止，它才会消失</strong>，算是一种强提醒。</li></ul></li><li>PDF 文档的标注管理一直是个大难题，而用 Logseq 后方便许多，能将注释与标签、笔记、截图统合在一起。</li><li>TOC Generator 插件生成目录：<code>{{renderer :tocgen}}</code>。</li><li><code>shift+左键</code> 将新页面打开在<strong>右侧边栏</strong>中。</li></ul>',9),c={id:"query",tabindex:"-1"},r=(0,s._)("a",{class:"header-anchor",href:"#query","aria-hidden":"true"},"#",-1),u=(0,s.Uk)(),d={href:"https://www.bilibili.com/video/BV1eq4y1N7Su",target:"_blank",rel:"noopener noreferrer"},h=(0,s.Uk)("query"),k=(0,s.Uk)("query 能按条件精准地找到结果，并动态更新在页面中，公式参考 "),g={href:"https://docs.logseq.com/#/page/queries",target:"_blank",rel:"noopener noreferrer"},m=(0,s.Uk)("官方文档"),b=(0,s.Uk)("。"),v=(0,s.uE)('<div class="language-jsx ext-jsx line-numbers-mode"><pre class="language-jsx"><code>文本后方添加 tag，比如\nidea <span class="token number">1</span> #idea\nfind #research\n\n使用 query 命令寻找对应结果\n<span class="token operator">*</span> and\n<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token function">query</span> <span class="token punctuation">(</span>and <span class="token punctuation">[</span><span class="token punctuation">[</span>research<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>idea<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token function">query</span> <span class="token punctuation">(</span><span class="token function">and</span> <span class="token punctuation">(</span>task now later done<span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>page<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n\n<span class="token operator">*</span> or\n<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token function">query</span> <span class="token punctuation">(</span>or <span class="token punctuation">[</span><span class="token punctuation">[</span>page <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>page <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n\n<span class="token operator">*</span> not\n<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token function">query</span> <span class="token punctuation">(</span>not <span class="token punctuation">[</span><span class="token punctuation">[</span>page <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>page <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n\n<span class="token operator">*</span> 罗列为 Later 的 task\n<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token function">query</span> <span class="token punctuation">(</span>task later<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n\n<span class="token operator">*</span> 一周内的日记，且包含关键词或标签\n<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token function">and</span> <span class="token punctuation">(</span>between <span class="token operator">-</span>6d today<span class="token punctuation">)</span>  <span class="token string">&quot;#幸福&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>远期不会安排的任务，往 later 清单中放，随时可以查看提醒，但又不需要每天重复调整时间。</p><h2 id="obisidian" tabindex="-1"><a class="header-anchor" href="#obisidian" aria-hidden="true">#</a> Obisidian</h2>',3),f={href:"https://sspai.com/post/67619",target:"_blank",rel:"noopener noreferrer"},q=(0,s.Uk)("Obsidian 新手系列之你不可不知的插件"),_={href:"https://sspai.com/post/72385",target:"_blank",rel:"noopener noreferrer"},y=(0,s.Uk)("每日笔记、日程管理、工作复盘——这是我钻研出的 Obsidian 八般武艺"),x=(0,s._)("p",null,[(0,s.Uk)("暂时放弃 Obisidian，虽然能按条件罗列页面，但没有 Logseq 方便。"),(0,s._)("strong",null,"如果后续要继续用，则尝试将日记分为 3 份，然后用 Dataview 整合在一起，在上面进行修改"),(0,s.Uk)("。")],-1),w=(0,s._)("p",null,"Obsidian 更习惯记录，日常 Task 由滴答管理，中期且不急的任务则由 Trello 管理。自带的看板功能需要建立笔记，不如 Trello 方便。",-1),U=(0,s._)("p",null,"Day Planer 有 sm18 的 Plan 功能。",-1),T=(0,s._)("p",null,[(0,s.Uk)("部分插件不能自动更新，需要手动下载插件文件，然后粘贴到 "),(0,s._)("code",null,".obsidian/plugins"),(0,s.Uk)(" 对应文件夹内。")],-1),O=(0,s._)("h3",{id:"dataview",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#dataview","aria-hidden":"true"},"#"),(0,s.Uk)(" Dataview")],-1),D={href:"https://blacksmithgu.github.io/obsidian-dataview/query/queries/",target:"_blank",rel:"noopener noreferrer"},L=(0,s.Uk)("Dataview"),C=(0,s.Uk)(" 功能更强大，不过用法也复杂许多。"),S=(0,s.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># journals 文本下所有</span>\ndv.list<span class="token punctuation">(</span>dv.pages<span class="token punctuation">(</span><span class="token string">&#39;&quot;journals&quot;&#39;</span><span class="token punctuation">)</span>.file.lists.text<span class="token punctuation">)</span>\n\n\n<span class="token comment"># 指定区域不为空</span>\n.where<span class="token punctuation">(</span>t <span class="token operator">=</span><span class="token operator">&gt;</span> t<span class="token operator">!=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>\n\n<span class="token comment"># 包含指定文字</span>\n.where<span class="token punctuation">(</span>t <span class="token operator">=</span><span class="token operator">&gt;</span> t.includes<span class="token punctuation">(</span><span class="token string">&quot;Logseq&quot;</span><span class="token punctuation">))</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="obsidian-query-language" tabindex="-1"><a class="header-anchor" href="#obsidian-query-language" aria-hidden="true">#</a> Obsidian Query Language</h3>',2),A={href:"https://github.com/jplattel/obsidian-query-language",target:"_blank",rel:"noopener noreferrer"},E=(0,s.Uk)("Obsidian Query Language"),Z=(0,s.Uk)(" 能使用 Query 语言，将符合条件的文件整合到一页。"),j=(0,s.uE)('<p>但整合出的是链接，并非如 Logseq 一样显示文件内容。想想有没办法，显示文件内容。</p><p>下列代码会抓取，journals 文件夹中包含「今日工作」或「xxxxxxx」的文件。</p><div class="language-oql ext-oql line-numbers-mode"><pre class="language-oql"><code>name: &#39;OR combination list of results&#39;\nquery: { $and: [{ &quot;path&quot;: &quot;&#39;journals/&quot;}, { $or: [{ &quot;content&quot;: &quot;&#39;今日工作&quot; }, { &quot;content&quot;: &quot;&#39;xxxxxxx&quot; }] }]}\ntemplate: &quot;list&quot;\nbadge: true\ndebug: true\nsort: &quot;title&quot;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="easy-typing" tabindex="-1"><a class="header-anchor" href="#easy-typing" aria-hidden="true">#</a> Easy Typing</h3><p>这是一个 Obsidian 的书写体验增强插件，自动格式化书写，比如自动在中英文之间添加空格，英文首字母大写，标点与文本间智能空格。</p><p>不过双拼容易出错，需要开启「行模式」。</p><h2 id="flomo" tabindex="-1"><a class="header-anchor" href="#flomo" aria-hidden="true">#</a> flomo</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#日记</span>\n<span class="token comment">#输入/播客、电影和读书</span>\n<span class="token comment">#输出/工作、生活和好物</span>\n<span class="token comment">#选题</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Inbox（收件箱）：我会将所有临时性的，还未消化的内容放置于此，定期来进行归档、整理或者删除。可以当做大脑的缓存，避免记录的时候纠结放在哪里。</li><li>Area（领域）：<strong>日常你需要精进的「领域」</strong>，比如健康就是一个领域，而跑步则是项目；写作是一个领域，而写一篇公众号文章则是一个项目。</li><li>Project（项目）：是指一个将要发生的独立事件，并且这个事件不是一次性就能完成的，至少需要多个动作才能完成。比如要写一本书，需要整理资料，罗列提纲，撰写内容，联系出版社。类似生活中还有组织一次旅游，录制一期播客等。在执行项目的相关资料</li><li>Resource（资源）：永久笔记，一般来说是兴趣、主题、资产等内容。注意是自己消化过的内容，而非机械的收藏。</li><li>Marketplace 是最重要研究的领域</li><li>Sheep、Books 是最重要的资源（Sheep 是指人物，即羔羊）</li><li>三醒吾身：日记</li></ul><h2 id="thebrain" tabindex="-1"><a class="header-anchor" href="#thebrain" aria-hidden="true">#</a> TheBrain</h2><p>TheBrain 可以把知识无限扩充，都连接在一起。但将工作流导图放入 TheBrain 后发现并不合适，比较适合更细化的内容？</p>',11),B={href:"https://www.bilibili.com/video/BV19a411578T",target:"_blank",rel:"noopener noreferrer"},I=(0,s.Uk)("善用佳软张玉新老师 · TheBrain ≠ 思维导图——运用 TheBrain 的三个阶段"),R=(0,s.uE)('<h2 id="visual-studio-code" tabindex="-1"><a class="header-anchor" href="#visual-studio-code" aria-hidden="true">#</a> Visual Studio Code</h2><p><code>Ctrl + .</code> 修复 markdown 语法错误。</p><h3 id="修改快捷键" tabindex="-1"><a class="header-anchor" href="#修改快捷键" aria-hidden="true">#</a> 修改快捷键</h3><ol><li><p><code>文件——首选项——键盘快捷方式</code>，进入键盘快捷方式界面，可以修改或解绑快捷键。</p></li><li><p>如果你想重置回默认设置，同样也可以右键——重置键绑定，即可回到默认设置。</p></li></ol><h3 id="排除文件夹" tabindex="-1"><a class="header-anchor" href="#排除文件夹" aria-hidden="true">#</a> 排除文件夹</h3><p>在 VS Code 中点击快捷键 Ctrl/Command+Shift+P，输入 setting，在设置中添加排除文件夹选项，注意此处不能使用全路径，只能隐藏对应名称或类型的文件和文件夹。</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code>  <span class="token property">&quot;files.exclude&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;**/blog&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//隐藏指定文件夹</span>\n    <span class="token property">&quot;**/[Pp]lugins&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//使用中括号时表示不区分大小写</span>\n    <span class="token property">&quot;**/*.pyc&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//隐藏所有 pyc 文件</span>\n    <span class="token property">&quot;**/*.d.ts&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//隐藏所有 d.ts 文件</span>\n  <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="picgo-图床" tabindex="-1"><a class="header-anchor" href="#picgo-图床" aria-hidden="true">#</a> picgo 图床</h3><p>文件-首选项 - 键盘快捷方式，修改 picgo 快捷方式。</p><ol><li>剪贴板图片上传：<code>ctrlOrCmd+alt+q</code></li><li>打开文件管理器上传：<code>ctrlOrCmd+alt+e</code></li><li>打开输入框输入路径上传：<code>ctrlOrCmd+alt+x</code></li></ol><p>自定义设置使用 picgo-electron 的配置 <code>C:\\Users\\Benson\\AppData\\Roaming\\picgo\\data.json</code>。</p><h2 id="eagle-素材管理" tabindex="-1"><a class="header-anchor" href="#eagle-素材管理" aria-hidden="true">#</a> Eagle 素材管理</h2><p>Eagle 优势之一是去重，我素材库过 T，文件几十万个，无法一个个清楚，但导入 Eagle 就可以去掉重复素材。</p><p>Eagle 导入流程：搜索文件夹中的 ZIP/RAR 文件，确认全部解压。</p><h2 id="zinc" tabindex="-1"><a class="header-anchor" href="#zinc" aria-hidden="true">#</a> Zinc</h2>',15),W={href:"https://github.com/zinclabs/zinc",target:"_blank",rel:"noopener noreferrer"},z=(0,s.Uk)("Zinc"),N=(0,s.Uk)(" 是一个进行全文索引的搜索引擎。它是 Elasticsearch 的轻量级替代品，运行在不到 100 MB 的 RAM 中。它使用 bluge 作为底层索引库。"),P=(0,s._)("sup",{class:"footnote-ref"},[(0,s._)("a",{href:"#footnote2"},"[2]"),(0,s._)("a",{class:"footnote-anchor",id:"footnote-ref2"})],-1),M=(0,s.uE)('<p>原本想对 Windows 本地盘进行搜索，但应该只支持 json 处理过后的索引库，不能对本地硬盘进行索引。</p><h3 id="zinc-初次启动" tabindex="-1"><a class="header-anchor" href="#zinc-初次启动" aria-hidden="true">#</a> Zinc 初次启动</h3><ol><li><p>系统属性-高级 - 环境变量 - 用户变量，新建变量 <code>ZINC_FIRST_ADMIN_USER</code> 和 <code>ZINC_FIRST_ADMIN_PASSWORD</code>。这是后面要用到的账户密码，可自由设置，但密码需要包含大小写字母，</p></li><li><p>在应用目录下打开终端，执行命令：</p></li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> data\n.<span class="token punctuation">\\</span>zinc.exe\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>成功执行后，打开 <code>http://localhost:4080/</code>，就能看到图形化界面了。</p><h3 id="全文索引-bluge" tabindex="-1"><a class="header-anchor" href="#全文索引-bluge" aria-hidden="true">#</a> 全文索引-Bluge</h3><p>启动 Zinc，但需要有 Bluge 索引数据库，才能进行全文搜索。</p>',7),F={href:"https://github.com/blugelabs/bluge",target:"_blank",rel:"noopener noreferrer"},V=(0,s.Uk)("Bluge"),Q=(0,s.Uk)(" 是基于 GO 的索引/搜索库，使用简单，有如基于磁盘和内存的索引功能。"),G=(0,s._)("p",null,[(0,s.Uk)("如果启动过程中报错，"),(0,s._)("code",null,"ZINC_FIRST_ADMIN_USER and ZINC_FIRST_ADMIN_PASSWORD must be set on first start. You should also change the credentials after first login."),(0,s.Uk)("，可能是没有配置好环境变量，或是没有以管理员身份运行终端（win+X，A）所导致的。")],-1),H=(0,s._)("hr",{class:"footnotes-sep"},null,-1),$={class:"footnotes"},J={class:"footnotes-list"},X={id:"footnote1",class:"footnote-item"},Y={href:"https://thinkstack.club/how-to-set-up-an-automated-daily-template-in-logseq/",target:"_blank",rel:"noopener noreferrer"},K=(0,s.Uk)("How to Set Up an Automated Daily Template in Logseq"),nn=(0,s.Uk)(),an=(0,s._)("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1),en={id:"footnote2",class:"footnote-item"},sn={href:"https://blog.csdn.net/zhangxin09/article/details/125080763",target:"_blank",rel:"noopener noreferrer"},tn=(0,s.Uk)("搜索引擎漫谈以及 Zinc 简介"),on=(0,s.Uk)(),ln=(0,s._)("a",{href:"#footnote-ref2",class:"footnote-backref"},"↩︎",-1),pn={},cn=(0,e(1935).Z)(pn,[["render",function(n,a){const e=(0,s.up)("ExternalLinkIcon");return(0,s.wg)(),(0,s.iD)("div",null,[t,o,(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("a",l,[i,(0,s.Wm)(e)])])]),p,(0,s._)("h3",c,[r,u,(0,s._)("a",d,[h,(0,s.Wm)(e)])]),(0,s._)("p",null,[k,(0,s._)("a",g,[m,(0,s.Wm)(e)]),b]),v,(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,[(0,s._)("a",f,[q,(0,s.Wm)(e)])])]),(0,s._)("li",null,[(0,s._)("p",null,[(0,s._)("a",_,[y,(0,s.Wm)(e)])])])]),x,w,U,T,O,(0,s._)("p",null,[(0,s._)("a",D,[L,(0,s.Wm)(e)]),C]),S,(0,s._)("p",null,[(0,s._)("a",A,[E,(0,s.Wm)(e)]),Z]),j,(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("a",B,[I,(0,s.Wm)(e)])])]),R,(0,s._)("p",null,[(0,s._)("a",W,[z,(0,s.Wm)(e)]),N,P]),M,(0,s._)("p",null,[(0,s._)("a",F,[V,(0,s.Wm)(e)]),Q]),G,H,(0,s._)("section",$,[(0,s._)("ol",J,[(0,s._)("li",X,[(0,s._)("p",null,[(0,s._)("a",Y,[K,(0,s.Wm)(e)]),nn,an])]),(0,s._)("li",en,[(0,s._)("p",null,[(0,s._)("a",sn,[tn,(0,s.Wm)(e)]),on,ln])])])])])}]])},1935:(n,a)=>{a.Z=(n,a)=>{const e=n.__vccOpts||n;for(const[n,s]of a)e[n]=s;return e}}}]);